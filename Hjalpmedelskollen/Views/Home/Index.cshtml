@model Hjalpmedelskollen.ViewModels.AidsByUnitViewModel

@{
    ViewData["Title"] = "Översikt";
}

<div class="small-nav">
    <ul>
        <li>@Model.SelectedUnit.Name.ToUpper()</li>
        <li id="change-unit" class="small-li">Byt enhet</li>
        <li id="add-new-aid" class="small-li" data-selected-unit="@Model.SelectedUnit.Id">Registrera hjälpmedel</li>
        <li class="small-li">Hantera patienter</li>
    </ul>
</div>
<div id="aids-by-unit">
    <div id="mobile-buttons">
        <h1>Vald enhet: @Model.SelectedUnit.Name</h1>
        <button id="mobile-change-unit">Byt enhet</button>
        <button id="mobile-add-new-aid" data-selected-unit="@Model.SelectedUnit.Id">Registrera hjälpmedel</button>
        <button id="qr-button">Skanna QR-kod</button>
        <span class="divider"></span>
    </div>
    <main id="aids-overview">
        <div class="overview-content">
            <h1 class="headline">@Model.SelectedUnit.Name</h1>
            <h2>Hjälpmedelsöversikt</h2>
            <p>Antal registrerade hjälpmedel: @Model.Aids.Count()</p>
            <div class="filter-selections">
                <div class="selection">
                    <label for="category">Kategori:</label>
                    <select id="select-category" name="category">
                        <option value="Alla">Alla</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Name">@category.Name</option>
                        }
                    </select>
                </div>
                <div class="selection">
                    <label for="status">Status:</label>
                    <select id="select-status" name="status">
                        <option value="Alla">Alla</option>
                        <option value="Ledigt">Ledigt</option>
                        <option value="Upptaget">Upptaget</option>
                    </select>
                </div>
                <div class="selection">
                    <label for="patient">Patient:</label>
                    <select id="select-patient" name="patient">
                        <option value="Alla">Alla</option>
                        @foreach (var patient in Model.Patients)
                        {
                            <option value="@patient.Id">@patient.Name (@patient.Id)</option>
                        }
                    </select>
                </div>
            </div>
            <div class="table-container">
                <table class="table-style" id="aid-table">
                    <tr class="table-header">
                        <th title="Unikt nummer på hjälpmedlet">Registreringsnummer</th>
                        <th title="Samlingskategorin som hjälpmedlet tillhör (exempelvis rollator, rullstol)">Kategori</th>
                        <th title="Produktnamn för hjälpmedlet (exempelvis Futura 600, Cross)">Produktnamn</th>
                        <th title="Om hjälpmedlet är ledigt eller upptaget">Status</th>
                        <th title="Plats där hjälpmedlet finns på enheten">Plats</th>
                        <th title="Tidpunkt för hjälpmedel behöver besiktigas nästa gång">Nästa besiktning</th>
                        <th title="Övrig kommentar om hjälpmedlet">Kommentar</th>
                    </tr>
                    @foreach (var aid in Model.Aids)
				    {
                        string backgroundColor = "";
                        string inspectionDate = string.Empty;
                        string status = aid.Status == true ? "Ledigt" : "Upptaget";
                        string statusBackgroundColor = aid.Status == true ? "green-background" : "red-background";
                        string icon = "";

                        if (aid.Inspection.HasValue)
                        {
                            inspectionDate = aid.Inspection.Value.ToString("yyyy-MM");

                            if (aid.Inspection.Value.Month == DateTime.Now.Month && aid.Inspection.Value.Year == DateTime.Now.Year)
                            {
                                backgroundColor = "yellow-background";
                                icon = "fa-solid fa-exclamation";
                            }
                            else if (aid.Inspection.Value < DateTime.Now)
                            {
                                backgroundColor = "red-background";
                                icon = "fa-solid fa-xmark";
                            }
                            else if (aid.Inspection.Value > DateTime.Now.AddMonths(1))
                            {
                                backgroundColor = "green-background";
                                icon = "fa-solid fa-check";
                            }
                        }
                        else
                        {
                            backgroundColor = "default-background";
                            inspectionDate = " ";
                        }

                        <tr class="aid-row" data-id="@aid.Id" data-category="@aid.Category" data-status="@aid.Status" data-qr="@aid.QrCode" data-registered="@aid.Registered" data-unit-id="@aid.UnitId">
                            <td class="m-column">@aid.Id</td>
                            <td class="m-column">@aid.Category</td>
                            <td class="m-column">@aid.ProductName</td>
                            <td class="m-column @statusBackgroundColor">@status</td>
						    <td class="m-column">@aid.Location</td>
                            <td class="@backgroundColor s-column">
                                <div class="inspection-layout">
                                    @inspectionDate<i class="@icon"></i>
                                </div>
                            </td>
						    <td class="l-column">@aid.Comment</td>
					    </tr>
				    }
                </table>
            </div>
        </div>
    </main>
    <aside id="unit-aside">
        <div class="unit-noteboard">
            <h3>Anslagstavlan</h3>
				<div>
                @for (int i = 0; i < Model.NoteBoards.Count && i < 5; i++)
                {
                    var note = Model.NoteBoards[i];
                    var trimmedDate = note.Date.ToString("yyyy-MM-dd");

                    <div class="note-container">
                        <div class="note">
                            <b>@trimmedDate</b>
                            <p class="long-message">@note.Note</p>
                        </div>
                    </div>
                }
				</div>
            <div class="noteboard-buttons">
                <button id="display-new-note-button"><i class="fa-solid fa-plus"></i> Lägg till</button>
                <button id="show-all-notes-button">Visa alla</button>
            </div>
        </div>
    </aside>
</div>

<partial name="_AddAidPopup" model="Model" />
<partial name ="_NotePopup" model = "Model" />
<partial name="_UpdateAidPopup" model="Model" />
<partial name="_ScanQrPopup" model="Model" />
<partial name="_SelectUnitPopup" model="Model" />
<partial name="_NewCategoryPopup" model="Model" />


